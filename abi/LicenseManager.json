[
	{
		"inputs": [],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "required",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "sent",
				"type": "uint256"
			}
		],
		"name": "InsufficientPayment",
		"type": "error"
	},
	{
		"inputs": [],
		"name": "InvalidDuration",
		"type": "error"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "licenseId",
				"type": "uint256"
			}
		],
		"name": "LicenseExpired",
		"type": "error"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "licenseId",
				"type": "uint256"
			}
		],
		"name": "LicenseInactive",
		"type": "error"
	},
	{
		"inputs": [],
		"name": "LicenseNotForSale",
		"type": "error"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "licenseId",
				"type": "uint256"
			}
		],
		"name": "LicenseNotTransferable",
		"type": "error"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "caller",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"name": "NotIPOwner",
		"type": "error"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "caller",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "licenseId",
				"type": "uint256"
			}
		],
		"name": "NotLicensee",
		"type": "error"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "caller",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "licenseId",
				"type": "uint256"
			}
		],
		"name": "NotLicensor",
		"type": "error"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "licenseId",
				"type": "uint256"
			},
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "purchaser",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "address",
				"name": "licensor",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "enum OnChainLicenseManager.Scope",
				"name": "scope",
				"type": "uint8"
			}
		],
		"name": "LicensePurchased",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "licenseId",
				"type": "uint256"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "revoker",
				"type": "address"
			}
		],
		"name": "LicenseRevoked",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			},
			{
				"indexed": true,
				"internalType": "enum OnChainLicenseManager.Scope",
				"name": "scope",
				"type": "uint8"
			}
		],
		"name": "LicenseTermsSet",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "oldLicenseId",
				"type": "uint256"
			},
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "newLicenseId",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "address",
				"name": "from",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "address",
				"name": "to",
				"type": "address"
			}
		],
		"name": "LicenseTransferred",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "newManager",
				"type": "address"
			}
		],
		"name": "changeManager",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"name": "getActiveLicensesByTokenId",
		"outputs": [
			{
				"internalType": "uint256[]",
				"name": "",
				"type": "uint256[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"name": "getAllTermsByTokenId",
		"outputs": [
			{
				"components": [
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "duration",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "legalTerms",
						"type": "string"
					},
					{
						"internalType": "bool",
						"name": "transferable",
						"type": "bool"
					}
				],
				"internalType": "struct OnChainLicenseManager.LicenseTerms[]",
				"name": "",
				"type": "tuple[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "licenseId",
				"type": "uint256"
			}
		],
		"name": "getLicense",
		"outputs": [
			{
				"components": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "licensor",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "licensee",
						"type": "address"
					},
					{
						"internalType": "enum OnChainLicenseManager.Scope",
						"name": "scope",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "beginTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "endTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "isActive",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "previousLicenseId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "nextLicenseId",
						"type": "uint256"
					}
				],
				"internalType": "struct OnChainLicenseManager.License",
				"name": "",
				"type": "tuple"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "user",
				"type": "address"
			}
		],
		"name": "getLicenseByLicensor",
		"outputs": [
			{
				"components": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "licensor",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "licensee",
						"type": "address"
					},
					{
						"internalType": "enum OnChainLicenseManager.Scope",
						"name": "scope",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "beginTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "endTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "isActive",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "previousLicenseId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "nextLicenseId",
						"type": "uint256"
					}
				],
				"internalType": "struct OnChainLicenseManager.License[]",
				"name": "",
				"type": "tuple[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			},
			{
				"internalType": "enum OnChainLicenseManager.Scope",
				"name": "scope",
				"type": "uint8"
			}
		],
		"name": "getLicenseTerms",
		"outputs": [
			{
				"components": [
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "duration",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "legalTerms",
						"type": "string"
					},
					{
						"internalType": "bool",
						"name": "transferable",
						"type": "bool"
					}
				],
				"internalType": "struct OnChainLicenseManager.LicenseTerms",
				"name": "",
				"type": "tuple"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "user",
				"type": "address"
			}
		],
		"name": "getLicensesByLicensee",
		"outputs": [
			{
				"internalType": "uint256[]",
				"name": "",
				"type": "uint256[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			}
		],
		"name": "getLicensesByTokenId",
		"outputs": [
			{
				"internalType": "uint256[]",
				"name": "",
				"type": "uint256[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			},
			{
				"internalType": "enum OnChainLicenseManager.Scope",
				"name": "scope",
				"type": "uint8"
			}
		],
		"name": "getTermsByTokenIdAndScope",
		"outputs": [
			{
				"components": [
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "duration",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "legalTerms",
						"type": "string"
					},
					{
						"internalType": "bool",
						"name": "transferable",
						"type": "bool"
					}
				],
				"internalType": "struct OnChainLicenseManager.LicenseTerms",
				"name": "",
				"type": "tuple"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "licenseId",
				"type": "uint256"
			}
		],
		"name": "getTransferHistory",
		"outputs": [
			{
				"internalType": "uint256[]",
				"name": "",
				"type": "uint256[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "user",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			},
			{
				"internalType": "enum OnChainLicenseManager.Scope",
				"name": "scope",
				"type": "uint8"
			}
		],
		"name": "hasValidLicense",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "licenseId",
				"type": "uint256"
			}
		],
		"name": "isLicenseValid",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			},
			{
				"internalType": "enum OnChainLicenseManager.Scope",
				"name": "",
				"type": "uint8"
			}
		],
		"name": "licenseTerms",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "price",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "duration",
				"type": "uint256"
			},
			{
				"internalType": "string",
				"name": "legalTerms",
				"type": "string"
			},
			{
				"internalType": "bool",
				"name": "transferable",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "licenses",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			},
			{
				"internalType": "address",
				"name": "licensor",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "licensee",
				"type": "address"
			},
			{
				"internalType": "enum OnChainLicenseManager.Scope",
				"name": "scope",
				"type": "uint8"
			},
			{
				"internalType": "uint256",
				"name": "beginTimestamp",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "endTimestamp",
				"type": "uint256"
			},
			{
				"internalType": "bool",
				"name": "isActive",
				"type": "bool"
			},
			{
				"internalType": "uint256",
				"name": "previousLicenseId",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "nextLicenseId",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "licensesByLicensee",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "licensesByLicensors",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			},
			{
				"internalType": "address",
				"name": "licensor",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "licensee",
				"type": "address"
			},
			{
				"internalType": "enum OnChainLicenseManager.Scope",
				"name": "scope",
				"type": "uint8"
			},
			{
				"internalType": "uint256",
				"name": "beginTimestamp",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "endTimestamp",
				"type": "uint256"
			},
			{
				"internalType": "bool",
				"name": "isActive",
				"type": "bool"
			},
			{
				"internalType": "uint256",
				"name": "previousLicenseId",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "nextLicenseId",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "licensesByTokenId",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "manager",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			},
			{
				"internalType": "enum OnChainLicenseManager.Scope",
				"name": "scope",
				"type": "uint8"
			},
			{
				"internalType": "address",
				"name": "_owner",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "licensee",
				"type": "address"
			}
		],
		"name": "purchaseLicense",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "licenseId",
				"type": "uint256"
			},
			{
				"internalType": "address",
				"name": "oldLicensee",
				"type": "address"
			}
		],
		"name": "revokeLicense",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_owner",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "tokenId",
				"type": "uint256"
			},
			{
				"internalType": "enum OnChainLicenseManager.Scope",
				"name": "scope",
				"type": "uint8"
			},
			{
				"internalType": "uint256",
				"name": "price",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "duration",
				"type": "uint256"
			},
			{
				"internalType": "bool",
				"name": "transferable",
				"type": "bool"
			},
			{
				"internalType": "string",
				"name": "legalTerms",
				"type": "string"
			}
		],
		"name": "setLicenseTerms",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "licenseId",
				"type": "uint256"
			},
			{
				"internalType": "address",
				"name": "newLicensee",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "oldLicensee",
				"type": "address"
			}
		],
		"name": "transferLicense",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	}
]